[%#
	This template sets up a tool's presentation for the web UI.

	It will handle the overall wrapper DIV, setting the style based on the
	display type (screen, modal, message, inline), as well as configure the
	'controls' area, which includes shfting the display mode (table, calendar, etc.)
	and the search / advanced search options.

	Very greedy template -- wants all of $self from your tool.pm class.

	This should always be sent to the browser as HTML.	I would not expect this template
	to change very often; only with major changes to the system.

	There should be nothing above the main tool_TOOL_AND_INSTANCE div.
%]

[%# screen mode div structure %]
[% IF attributes.tool_type.match('Screen') %]

	<div id="tool_[%tool_and_instance%]">

		[% IF attributes.display_description == 'Yes' %]
			<div class="well">
				[% attributes.description %]
			</div>
		[% END %]

		[%# area for any notice put into json_results->top_notice %]
		<div class="well well-sm" id="top_notice" style="display: none">
		</div>

		[%# area for tools controls %]
		[% IF !attributes.display_tool_controls || attributes.display_tool_controls == 'Yes' %]
			<div id="tool_controls_[%tool_and_instance%]" class="row">
				[%# Use a separate file so we can re-process if needed. %]
				[% INCLUDE tool_controls.tt %]
			</div>
		[% END %]

		[%# area for charting features -- see render_tool_chart() in omnitool_routines.js %]
		<div id="chartarea_[%tool_and_instance%]" style="display:none;">
		</div>

		[%# main display area goes here %]
		<div id="tool_display_[%tool_and_instance%]" class="row">
			<div class="col-xs-12">
				Loading Display Area...
			</div>
		</div>
	</div>

[%# modal mode div structure %]
[% ELSIF attributes.tool_type.match('Modal') %]

	<div id="tool_[%tool_and_instance%]" class="modal fade" tabindex="-1">
		<div class="modal-dialog modal-lg">

		<div id="tool_display_[%tool_and_instance%]" class="modal-content">
		</div><!-- /.modal-content -->

		</div>
	</div><!-- /.modal-dialog -->

[% END %]


