{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww16520\viewh10360\viewkind0
\deftab720
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\partightenfactor0

\f0\b\fs36 \cf0 OMNITOOL 6.x SUMMARY
\f1\b0\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\partightenfactor0

\f0\fs36 \cf0 \
OmniTool is a comprehensive platform for the rapid development of web application suites.  It is designed to simplify and speed up the development process, reducing code requirements to only the specific features and logic for the target application.  OmniTool makes life easier for developers.
\f1\fs24 \

\f0\fs36 \
The OmniTool Administration UI allows developers to design object models (datatypes), specify the behavior of controllers (tools), control display views (templates), import custom code (sub-classes), and configure the authentication and authorization logic.  These actions are all completed via straight-forward and well-documented web forms so that most changes to application behavior are implemented without code changes and deployed instantly.
\f1\fs24 \

\f0\fs36 \
The configurations of tools, datatypes, templates, and custom sub-classes combine to form OmniTool Applications, which are put into use via separate Application Instances.  Each Application Instance may have a separate database, will use separate logic to authorize users, and can have a separate application server.  This allows for horizontal scaling as well as single-tenancy for each organization making use of a given Application.
\f1\fs24 \

\f0\fs36 \
A key differentiator for OmniTool is the inclusion of a complete User Interface.  This UI kit provides a login form, all navigation, view bookmarking, and all search controls.  For most applications, there will be no need to develop HTML templates or JavaScript for new applications, as the standard view mode templates are capable to handle search results, record details display, forms inputs, modal views, pop-up messages, and more.   This facet of the system allows new rich applications to be online within minutes of installation.
\f1\fs24 \

\f0\fs36 \
Every application developed with OmniTool is automatically equipped with a client API without any special code.  Users are able to provision API keys that can be used to access their tools and submit requests to OmniTool.  These keys are tied to IP addresses and require periodic renewal (which can be extended by the administrators).  Because all OmniTool applications receive data via POST and return data via JSON objects, it is very straight-forward to write an API client for any tool in the system.  Example libraries are provided.
\f1\fs24 \

\f0\fs36 \
Additional facilities within OmniTool include:  background task management and execution, inbound email processing, outbound email creation, and a large library of utility functions to aid with many common tasks.
\f1\fs24 \

\f0\fs36 \
OmniTool is an object-oriented system, written in Modern Perl using Plack for delivery.  Application-specific code is written as sub-classes to tools and datatypes, so that all of the common facilities are always available.  The client-side code is developed with HTML5, Bootstrap, clean JavaScript, jQuery, and Jemplates.  All data is stored in well-normalized MySQL 5.7+ / MariaDB 10.3+ databases.  OmniTool is designed to run on Linux or FreeBSD.  OmniTool is a extremely well-documented system with many examples in the extensive developer guides.
\f1\fs24 \
}